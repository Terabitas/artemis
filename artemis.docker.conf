# This config file is INI-formatted

# Lower the logging threshold. Acceptable values are 0, 1, and 2. A higher
# value corresponds to a lower logging threshold.
verbosity=9

# Server ip
ip=

endpointhost=http://localhost

# Server port to listen on
port=1080

##################################
#           CORS config          #
##################################

# A list of origins a cross-domain request can be executed from.
# If the special * value is present in the list, all origins will be allowed.
# An origin may contain a wildcard (*) to replace 0 or more characters (i.e.: http://*.domain.com).
# Usage of wildcards implies a small performance penality.
# Only one wildcard can be used per origin.
# For example: "http://xxx.com,http://yyy.com"
cors_allowed_origins="*"

# A list of methods the client is allowed to use with cross-domain requests.
# Default value is simple methods (GET and POST).
cors_allowed_methods="GET,POST,DELETE,PUT"

# A list of non simple headers the client is allowed to use with cross-domain requests.
cors_allowed_headers="Origin,Content-Type,Accept,Authorization"

# Indicates which headers are safe to expose to the API of a CORS API specification
cors_exposed_headers=""

# Indicates whether the request can include user credentials like cookies, HTTP authentication or client side SSL certificates.
# The default is false.
cors_allow_credentials=false

# Indicates how long (in seconds) the results of a preflight request can be cached.
# The default is 0 which stands for no max age.
cors_max_age=0

# Instructs preflight to let other potential next handlers to process the OPTIONS method.
# Turn this on if your application handles OPTIONS.
cors_options_pass_through=false

# Debugging flag adds additional output to debug server side CORS issues.
cors_debug=true

##################################
#           JWT config           #
##################################

# JWT signing secret
jwt_sign_key=some-shared-key

